강토는 다가오는 공연에서 연주할 N개의 곡을 연주하고 있다.
매번 곡이 시작하기 전에 볼륨을 바꾸고 연주하려고 한다.

공연이 시작하기 전에 각각의 곡이 시작하기 전에 바꿀 수 있는 볼륨의 리스트를 만들었다.
이 리스트를 V라고 했을 때, V[i]는 i번째 곡을 연주하기 전에 바꿀 수 있는 볼륨을 의미한다.
항상 리스트에 적힌 차이로만 볼륨을 바꿀 수 있다.
즉, 현재 볼륨이 P이고 지금 i번째 곡을 연주하기 전이라면,
    i번 곡은 P+V[i]나 P-V[i]로 연주해야 한다.
    하지만, 0보다 작은 값으로 볼륨을 바꾸거나, M보다 큰 값으로 볼륨을 바꿀 수 없다.

곡의 개수 N과 시작 볼륨 S, 그리고 M이 주어졌을 때,
마지막 곡을 연주할 수 있는 볼륨 중 최댓값을 구하는 프로그램
모든 곡은 적힌 순서대로 연주해야한다.

입력
- 첫째 줄에 N, S, M이 주어진다. (1 ≤ N ≤ 50, 1 ≤ M ≤ 1,000, 0 ≤ S ≤ M) 
- 둘째 줄에는 각 곡이 시작하기 전에 줄 수 있는 볼륨의 차이가 주어진다.
    이 값은 1보다 크거나 같고 M보다 작거나 같다.

출력
- 첫째 줄에 가능한 마지막 곡의 최댓값을 출력한다.
- 만약 마지막 곡을 연주할 수 없다면 (볼륨 조절을 할 수 없다면) -1을 출력한다.

볼륨은 P에 계속 저장하고 V[i]는 i번째 곡을 연주하기 전 바꿀 수 있는 볼륨
M은 1000보다 작아야하고, 볼륨을 바꿀 때는 M보다 클 수 없다. 즉 최대 볼륨을 넘어가면 -1을 출력
i번 곡은 P+V[i] or P-V[i]

예제 입력
3 5 10
5 3 7

예제 출력
10

DP 테이블
i(볼륨 리스트)   j(가능한 볼륨)
0               5
1               0, 10
2               3, 7
3               10, 0

점화식
dp[i-1][j] = true라면
    j + v[i] <= M 이면 dp[i][j+V[i]] = true
    j - V[i] ≥ 0 이면 dp[i][j-V[i]] = true
        i-1번째 곡까지 연주했을 때 j 볼륨이 가능했다면,
        i번째 곡에서 +V[i] 또는 -V[i]를 해서 새로운 볼륨을 만들 수 있음.

예제 입력
4 8 20
15 2 9 10

예제 출력
-1